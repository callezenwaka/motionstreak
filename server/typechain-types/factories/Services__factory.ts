/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Services, ServicesInterface } from "../Services";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "acctAddr",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "FeeAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "FeeDeleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "FeeUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "accountsAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "cost",
        type: "uint256",
      },
    ],
    name: "addFee",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "deleteFee",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getFee",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "cost",
            type: "uint256",
          },
        ],
        internalType: "struct Services.Fee",
        name: "fee",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getFees",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "cost",
            type: "uint256",
          },
        ],
        internalType: "struct Services.Fee[]",
        name: "fees",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kill",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "cost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "updateFee",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620019ad380380620019ad8339818101604052810190620000379190620000d6565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000150565b600081519050620000d08162000136565b92915050565b600060208284031215620000e957600080fd5b6000620000f984828501620000bf565b91505092915050565b60006200010f8262000116565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001418162000102565b81146200014d57600080fd5b50565b61184d80620001606000396000f3fe6080604052600436106100705760003560e01c806395ef86f61161004e57806395ef86f6146100da5780639af608c91461010a578063c3e2424714610147578063fcee45f41461017757610070565b806301eb3a261461007557806341c0e1b5146100a557806355cd7947146100af575b600080fd5b61008f600480360381019061008a9190611177565b6101b4565b60405161009c9190611488565b60405180910390f35b6100ad61039a565b005b3480156100bb57600080fd5b506100c4610461565b6040516100d1919061144b565b60405180910390f35b6100f460048036038101906100ef9190611273565b610487565b6040516101019190611488565b60405180910390f35b34801561011657600080fd5b50610131600480360381019061012c919061114e565b610800565b60405161013e9190611466565b60405180910390f35b610161600480360381019061015c91906111cb565b61093d565b60405161016e9190611488565b60405180910390f35b34801561018357600080fd5b5061019e60048036038101906101999190611273565b610b42565b6040516101ab91906114e3565b60405180910390f35b600060011515600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fbcbc0f1336040518263ffffffff1660e01b8152600401610215919061144b565b60006040518083038186803b15801561022d57600080fd5b505afa158015610241573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061026a9190611232565b60a001511515146102b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a7906114c3565b60405180910390fd5b7f4ced768a170569915baf87cffbf816f97f51bebe9dac5a291abbbb9e357ce966336040516102df919061144b565b60405180910390a1600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160405180604001604052808581526020018481525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000019080519060200190610383929190610d7a565b506020820151816001015550506001905092915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610428576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041f906114a3565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060011515600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fbcbc0f1336040518263ffffffff1660e01b81526004016104e8919061144b565b60006040518083038186803b15801561050057600080fd5b505afa158015610514573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061053d9190611232565b60a00151151514610583576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057a906114c3565b60405180910390fd5b7f6733b28b7870007f0a5a781a66999dbb01cc76b7fec268fcea0872c92a7174e5336040516105b2919061144b565b60405180910390a160006001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018054905061060e91906115c1565b9050600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001818154811061068a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060020201600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018481548110610712577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906002020160008201816000019080546107349061167f565b61073f929190610e00565b5060018201548160010155905050600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018054806107c5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6001900381819060005260206000209060020201600080820160006107ea9190610e8d565b6001820160009055505090556001915050919050565b6060600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001805480602002602001604051908101604052809291908181526020016000905b8282101561093257838290600052602060002090600202016040518060400160405290816000820180546108979061167f565b80601f01602080910402602001604051908101604052809291908181526020018280546108c39061167f565b80156109105780601f106108e557610100808354040283529160200191610910565b820191906000526020600020905b8154815290600101906020018083116108f357829003601f168201915b5050505050815260200160018201548152505081526020019060010190610864565b505050509050919050565b600060011515600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fbcbc0f1336040518263ffffffff1660e01b815260040161099e919061144b565b60006040518083038186803b1580156109b657600080fd5b505afa1580156109ca573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906109f39190611232565b60a00151151514610a39576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a30906114c3565b60405180910390fd5b7fbd05310f656084427dd882dc8fca6072505fb1d9bbe24eac41e794e3c38ff3fe33604051610a68919061144b565b60405180910390a1604051806040016040528085815260200184815250600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018381548110610aff577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600202016000820151816000019080519060200190610b29929190610d7a565b5060208201518160010155905050600190509392505050565b610b4a610ecd565b60011515600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fbcbc0f1336040518263ffffffff1660e01b8152600401610ba9919061144b565b60006040518083038186803b158015610bc157600080fd5b505afa158015610bd5573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610bfe9190611232565b60a00151151514610c44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3b906114c3565b60405180910390fd5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018281548110610cbe577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060020201604051806040016040529081600082018054610ce79061167f565b80601f0160208091040260200160405190810160405280929190818152602001828054610d139061167f565b8015610d605780601f10610d3557610100808354040283529160200191610d60565b820191906000526020600020905b815481529060010190602001808311610d4357829003601f168201915b505050505081526020016001820154815250509050919050565b828054610d869061167f565b90600052602060002090601f016020900481019282610da85760008555610def565b82601f10610dc157805160ff1916838001178555610def565b82800160010185558215610def579182015b82811115610dee578251825591602001919060010190610dd3565b5b509050610dfc9190610ee7565b5090565b828054610e0c9061167f565b90600052602060002090601f016020900481019282610e2e5760008555610e7c565b82601f10610e3f5780548555610e7c565b82800160010185558215610e7c57600052602060002091601f016020900482015b82811115610e7b578254825591600101919060010190610e60565b5b509050610e899190610ee7565b5090565b508054610e999061167f565b6000825580601f10610eab5750610eca565b601f016020900490600052602060002090810190610ec99190610ee7565b5b50565b604051806040016040528060608152602001600081525090565b5b80821115610f00576000816000905550600101610ee8565b5090565b6000610f17610f128461152a565b611505565b905082815260208101848484011115610f2f57600080fd5b610f3a84828561163d565b509392505050565b6000610f55610f508461152a565b611505565b905082815260208101848484011115610f6d57600080fd5b610f7884828561164c565b509392505050565b600081359050610f8f816117d2565b92915050565b600081519050610fa4816117d2565b92915050565b600081519050610fb9816117e9565b92915050565b600082601f830112610fd057600080fd5b8135610fe0848260208601610f04565b91505092915050565b600082601f830112610ffa57600080fd5b815161100a848260208601610f42565b91505092915050565b6000610100828403121561102657600080fd5b611031610100611505565b9050600082015167ffffffffffffffff81111561104d57600080fd5b61105984828501610fe9565b600083015250602082015167ffffffffffffffff81111561107957600080fd5b61108584828501610fe9565b602083015250604082015167ffffffffffffffff8111156110a557600080fd5b6110b184828501610fe9565b604083015250606082015167ffffffffffffffff8111156110d157600080fd5b6110dd84828501610fe9565b60608301525060806110f184828501610f95565b60808301525060a061110584828501610faa565b60a08301525060c061111984828501610faa565b60c08301525060e061112d84828501610faa565b60e08301525092915050565b60008135905061114881611800565b92915050565b60006020828403121561116057600080fd5b600061116e84828501610f80565b91505092915050565b6000806040838503121561118a57600080fd5b600083013567ffffffffffffffff8111156111a457600080fd5b6111b085828601610fbf565b92505060206111c185828601611139565b9150509250929050565b6000806000606084860312156111e057600080fd5b600084013567ffffffffffffffff8111156111fa57600080fd5b61120686828701610fbf565b935050602061121786828701611139565b925050604061122886828701611139565b9150509250925092565b60006020828403121561124457600080fd5b600082015167ffffffffffffffff81111561125e57600080fd5b61126a84828501611013565b91505092915050565b60006020828403121561128557600080fd5b600061129384828501611139565b91505092915050565b60006112a883836113c2565b905092915050565b6112b9816115f5565b82525050565b60006112ca8261156b565b6112d4818561158e565b9350836020820285016112e68561155b565b8060005b858110156113225784840389528151611303858261129c565b945061130e83611581565b925060208a019950506001810190506112ea565b50829750879550505050505092915050565b61133d81611607565b82525050565b600061134e82611576565b611358818561159f565b935061136881856020860161164c565b6113718161176f565b840191505092915050565b6000611389600d836115b0565b915061139482611780565b602082019050919050565b60006113ac6009836115b0565b91506113b7826117a9565b602082019050919050565b600060408301600083015184820360008601526113df8282611343565b91505060208301516113f4602086018261143c565b508091505092915050565b6000604083016000830151848203600086015261141c8282611343565b9150506020830151611431602086018261143c565b508091505092915050565b61144581611633565b82525050565b600060208201905061146060008301846112b0565b92915050565b6000602082019050818103600083015261148081846112bf565b905092915050565b600060208201905061149d6000830184611334565b92915050565b600060208201905081810360008301526114bc8161137c565b9050919050565b600060208201905081810360008301526114dc8161139f565b9050919050565b600060208201905081810360008301526114fd81846113ff565b905092915050565b600061150f611520565b905061151b82826116b1565b919050565b6000604051905090565b600067ffffffffffffffff82111561154557611544611740565b5b61154e8261176f565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006115cc82611633565b91506115d783611633565b9250828210156115ea576115e96116e2565b5b828203905092915050565b600061160082611613565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561166a57808201518184015260208101905061164f565b83811115611679576000848401525b50505050565b6000600282049050600182168061169757607f821691505b602082108114156116ab576116aa611711565b5b50919050565b6116ba8261176f565b810181811067ffffffffffffffff821117156116d9576116d8611740565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f556e617574686f72697365642e00000000000000000000000000000000000000600082015250565b7f466f7262696464656e0000000000000000000000000000000000000000000000600082015250565b6117db816115f5565b81146117e657600080fd5b50565b6117f281611607565b81146117fd57600080fd5b50565b61180981611633565b811461181457600080fd5b5056fea2646970667358221220e3f6bdcf09a4b856596669abd611b608612cda5def15d460080f1f0d9c1041af64736f6c63430008040033";

type ServicesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ServicesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Services__factory extends ContractFactory {
  constructor(...args: ServicesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Services";
  }

  deploy(
    acctAddr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Services> {
    return super.deploy(acctAddr, overrides || {}) as Promise<Services>;
  }
  getDeployTransaction(
    acctAddr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(acctAddr, overrides || {});
  }
  attach(address: string): Services {
    return super.attach(address) as Services;
  }
  connect(signer: Signer): Services__factory {
    return super.connect(signer) as Services__factory;
  }
  static readonly contractName: "Services";
  public readonly contractName: "Services";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ServicesInterface {
    return new utils.Interface(_abi) as ServicesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Services {
    return new Contract(address, _abi, signerOrProvider) as Services;
  }
}
