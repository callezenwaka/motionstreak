/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Services, ServicesInterface } from "../Services";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "acctAddr",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "ServiceAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "ServiceDeleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "ServiceUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "accountsAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "cost",
        type: "uint256",
      },
    ],
    name: "addService",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "deleteService",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getService",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "cost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct Services.Fee",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getServices",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "cost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct Services.Fee[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kill",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "cost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "updateService",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001e0338038062001e038339818101604052810190620000379190620000d6565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000150565b600081519050620000d08162000136565b92915050565b600060208284031215620000e957600080fd5b6000620000f984828501620000bf565b91505092915050565b60006200010f8262000116565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001418162000102565b81146200014d57600080fd5b50565b611ca380620001606000396000f3fe6080604052600436106100705760003560e01c8063a6ffc2d31161004e578063a6ffc2d3146100da578063b2532a451461010a578063cc1a40b714610147578063ef0e239b1461017757610070565b806341c0e1b51461007557806355cd79471461007f57806374e29ee6146100aa575b600080fd5b61007d6101b4565b005b34801561008b57600080fd5b5061009461027b565b6040516100a19190611832565b60405180910390f35b6100c460048036038101906100bf91906115d8565b6102a1565b6040516100d1919061186f565b60405180910390f35b6100f460048036038101906100ef9190611530565b61073b565b604051610101919061186f565b60405180910390f35b34801561011657600080fd5b50610131600480360381019061012c919061148a565b6109cf565b60405161013e919061184d565b60405180910390f35b610161600480360381019061015c91906114dc565b610b16565b60405161016e919061186f565b60405180910390f35b34801561018357600080fd5b5061019e600480360381019061019991906115d8565b610dd6565b6040516101ab91906118ff565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610242576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610239906118df565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073__$1c41232b8c3f9382c4bdca1a05a1ab00e7$__63465c4105600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fbcbc0f1336040518263ffffffff1660e01b81526004016103189190611832565b60006040518083038186803b15801561033057600080fd5b505afa158015610344573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061036d9190611597565b608001516040518263ffffffff1660e01b815260040161038d919061188a565b60206040518083038186803b1580156103a557600080fd5b505af41580156103b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103dd91906114b3565b61041c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610413906118bf565b60405180910390fd5b7f79482e43d291b9a6d64e94d0cf51961021b99f6725377b2b4854512224f1514a3360405161044b9190611832565b60405180910390a160006001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001805490506104a791906119ee565b905082600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018281548110610524577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906003020160020181905550600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000181815481106105b3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060030201600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001848154811061063b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060030201600082018160000190805461065d90611aac565b610668929190611097565b506001820154816001015560028201548160020155905050600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018054806106f8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b60019003818190600052602060002090600302016000808201600061071d9190611124565b60018201600090556002820160009055505090556001915050919050565b600073__$1c41232b8c3f9382c4bdca1a05a1ab00e7$__63465c4105600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fbcbc0f1336040518263ffffffff1660e01b81526004016107b29190611832565b60006040518083038186803b1580156107ca57600080fd5b505afa1580156107de573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906108079190611597565b608001516040518263ffffffff1660e01b8152600401610827919061188a565b60206040518083038186803b15801561083f57600080fd5b505af4158015610853573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087791906114b3565b6108b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ad906118bf565b60405180910390fd5b7f0176c74b9bca78214099248dd4e675a4be45c1f7417e269f78ef97e96ece2a51336040516108e59190611832565b60405180910390a1604051806060016040528085815260200184815260200183815250600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018381548110610982577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906003020160008201518160000190805190602001906109ac929190611164565b506020820151816001015560408201518160020155905050600190509392505050565b6060600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001805480602002602001604051908101604052809291908181526020016000905b82821015610b0b5783829060005260206000209060030201604051806060016040529081600082018054610a6690611aac565b80601f0160208091040260200160405190810160405280929190818152602001828054610a9290611aac565b8015610adf5780601f10610ab457610100808354040283529160200191610adf565b820191906000526020600020905b815481529060010190602001808311610ac257829003601f168201915b505050505081526020016001820154815260200160028201548152505081526020019060010190610a33565b505050509050919050565b600073__$1c41232b8c3f9382c4bdca1a05a1ab00e7$__63465c4105600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fbcbc0f1336040518263ffffffff1660e01b8152600401610b8d9190611832565b60006040518083038186803b158015610ba557600080fd5b505afa158015610bb9573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610be29190611597565b608001516040518263ffffffff1660e01b8152600401610c02919061188a565b60206040518083038186803b158015610c1a57600080fd5b505af4158015610c2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5291906114b3565b610c91576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c88906118bf565b60405180910390fd5b7fc917ab672aa101ddaa2e4db6de34f67d180098d502a2ed9e199f79b4c4333a6b33604051610cc09190611832565b60405180910390a16000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001805490509050600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160405180606001604052808681526020018581526020018381525090806001815401808255809150506001900390600052602060002090600302016000909190919091506000820151816000019080519060200190610db4929190611164565b5060208201518160010155604082015181600201555050600191505092915050565b610dde6111ea565b73__$1c41232b8c3f9382c4bdca1a05a1ab00e7$__63465c4105600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fbcbc0f1336040518263ffffffff1660e01b8152600401610e539190611832565b60006040518083038186803b158015610e6b57600080fd5b505afa158015610e7f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610ea89190611597565b608001516040518263ffffffff1660e01b8152600401610ec8919061188a565b60206040518083038186803b158015610ee057600080fd5b505af4158015610ef4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1891906114b3565b610f57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4e906118bf565b60405180910390fd5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018281548110610fd1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060030201604051806060016040529081600082018054610ffa90611aac565b80601f016020809104026020016040519081016040528092919081815260200182805461102690611aac565b80156110735780601f1061104857610100808354040283529160200191611073565b820191906000526020600020905b81548152906001019060200180831161105657829003601f168201915b50505050508152602001600182015481526020016002820154815250509050919050565b8280546110a390611aac565b90600052602060002090601f0160209004810192826110c55760008555611113565b82601f106110d65780548555611113565b8280016001018555821561111357600052602060002091601f016020900482015b828111156111125782548255916001019190600101906110f7565b5b509050611120919061120b565b5090565b50805461113090611aac565b6000825580601f106111425750611161565b601f016020900490600052602060002090810190611160919061120b565b5b50565b82805461117090611aac565b90600052602060002090601f01602090048101928261119257600085556111d9565b82601f106111ab57805160ff19168380011785556111d9565b828001600101855582156111d9579182015b828111156111d85782518255916020019190600101906111bd565b5b5090506111e6919061120b565b5090565b60405180606001604052806060815260200160008152602001600081525090565b5b8082111561122457600081600090555060010161120c565b5090565b600061123b61123684611946565b611921565b90508281526020810184848401111561125357600080fd5b61125e848285611a6a565b509392505050565b600061127961127484611946565b611921565b90508281526020810184848401111561129157600080fd5b61129c848285611a79565b509392505050565b6000813590506112b381611c28565b92915050565b6000815190506112c881611c28565b92915050565b6000815190506112dd81611c3f565b92915050565b600082601f8301126112f457600080fd5b8135611304848260208601611228565b91505092915050565b600082601f83011261131e57600080fd5b815161132e848260208601611266565b91505092915050565b6000610100828403121561134a57600080fd5b611355610100611921565b9050600082015167ffffffffffffffff81111561137157600080fd5b61137d8482850161130d565b600083015250602082015167ffffffffffffffff81111561139d57600080fd5b6113a98482850161130d565b602083015250604082015167ffffffffffffffff8111156113c957600080fd5b6113d58482850161130d565b604083015250606082015167ffffffffffffffff8111156113f557600080fd5b6114018482850161130d565b606083015250608082015167ffffffffffffffff81111561142157600080fd5b61142d8482850161130d565b60808301525060a0611441848285016112ce565b60a08301525060c0611455848285016112ce565b60c08301525060e0611469848285016112b9565b60e08301525092915050565b60008135905061148481611c56565b92915050565b60006020828403121561149c57600080fd5b60006114aa848285016112a4565b91505092915050565b6000602082840312156114c557600080fd5b60006114d3848285016112ce565b91505092915050565b600080604083850312156114ef57600080fd5b600083013567ffffffffffffffff81111561150957600080fd5b611515858286016112e3565b925050602061152685828601611475565b9150509250929050565b60008060006060848603121561154557600080fd5b600084013567ffffffffffffffff81111561155f57600080fd5b61156b868287016112e3565b935050602061157c86828701611475565b925050604061158d86828701611475565b9150509250925092565b6000602082840312156115a957600080fd5b600082015167ffffffffffffffff8111156115c357600080fd5b6115cf84828501611337565b91505092915050565b6000602082840312156115ea57600080fd5b60006115f884828501611475565b91505092915050565b600061160d8383611783565b905092915050565b61161e81611a22565b82525050565b600061162f82611987565b61163981856119aa565b93508360208202850161164b85611977565b8060005b8581101561168757848403895281516116688582611601565b94506116738361199d565b925060208a0199505060018101905061164f565b50829750879550505050505092915050565b6116a281611a34565b82525050565b60006116b382611992565b6116bd81856119bb565b93506116cd818560208601611a79565b6116d681611b9c565b840191505092915050565b60006116ec82611992565b6116f681856119dd565b9350611706818560208601611a79565b61170f81611b9c565b840191505092915050565b60006117276010836119cc565b915061173282611bad565b602082019050919050565b600061174a6006836119dd565b915061175582611bd6565b602082019050919050565b600061176d6014836119cc565b915061177882611bff565b602082019050919050565b600060608301600083015184820360008601526117a082826116a8565b91505060208301516117b56020860182611823565b5060408301516117c86040860182611823565b508091505092915050565b600060608301600083015184820360008601526117f082826116a8565b91505060208301516118056020860182611823565b5060408301516118186040860182611823565b508091505092915050565b61182c81611a60565b82525050565b60006020820190506118476000830184611615565b92915050565b600060208201905081810360008301526118678184611624565b905092915050565b60006020820190506118846000830184611699565b92915050565b600060408201905081810360008301526118a481846116e1565b905081810360208301526118b78161173d565b905092915050565b600060208201905081810360008301526118d88161171a565b9050919050565b600060208201905081810360008301526118f881611760565b9050919050565b6000602082019050818103600083015261191981846117d3565b905092915050565b600061192b61193c565b90506119378282611ade565b919050565b6000604051905090565b600067ffffffffffffffff82111561196157611960611b6d565b5b61196a82611b9c565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006119f982611a60565b9150611a0483611a60565b925082821015611a1757611a16611b0f565b5b828203905092915050565b6000611a2d82611a40565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611a97578082015181840152602081019050611a7c565b83811115611aa6576000848401525b50505050565b60006002820490506001821680611ac457607f821691505b60208210811415611ad857611ad7611b3e565b5b50919050565b611ae782611b9c565b810181811067ffffffffffffffff82111715611b0657611b05611b6d565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f41636365737320466f7262696464656e00000000000000000000000000000000600082015250565b7f54656e616e740000000000000000000000000000000000000000000000000000600082015250565b7f556e617574686f7269736564204163636573732e000000000000000000000000600082015250565b611c3181611a22565b8114611c3c57600080fd5b50565b611c4881611a34565b8114611c5357600080fd5b50565b611c5f81611a60565b8114611c6a57600080fd5b5056fea264697066735822122080a7e6b29bc9dbc660d2eab41f11eefc3201c5eaf21cc0c440d7c1c3ba76570264736f6c63430008040033";

type ServicesConstructorParams =
  | [linkLibraryAddresses: ServicesLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ServicesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Services__factory extends ContractFactory {
  constructor(...args: ServicesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Services__factory.linkBytecode(linkLibraryAddresses), signer);
    }
    this.contractName = "Services";
  }

  static linkBytecode(linkLibraryAddresses: ServicesLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$1c41232b8c3f9382c4bdca1a05a1ab00e7\\$__", "g"),
      linkLibraryAddresses["contracts/Utils.sol:Utils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    acctAddr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Services> {
    return super.deploy(acctAddr, overrides || {}) as Promise<Services>;
  }
  getDeployTransaction(
    acctAddr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(acctAddr, overrides || {});
  }
  attach(address: string): Services {
    return super.attach(address) as Services;
  }
  connect(signer: Signer): Services__factory {
    return super.connect(signer) as Services__factory;
  }
  static readonly contractName: "Services";
  public readonly contractName: "Services";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ServicesInterface {
    return new utils.Interface(_abi) as ServicesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Services {
    return new Contract(address, _abi, signerOrProvider) as Services;
  }
}

export interface ServicesLibraryAddresses {
  ["contracts/Utils.sol:Utils"]: string;
}
