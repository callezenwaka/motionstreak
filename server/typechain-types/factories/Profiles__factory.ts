/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Profiles, ProfilesInterface } from "../Profiles";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "acctAddr",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "ProfileAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "ProfileUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "accountsAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "doc",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "cost",
        type: "uint256",
      },
    ],
    name: "addFee",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "photoURL",
        type: "string",
      },
    ],
    name: "addProfile",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "deleteFee",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getFee",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "doc",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "cost",
            type: "uint256",
          },
        ],
        internalType: "struct Profiles.Fee",
        name: "fee",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFees",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "doc",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "cost",
            type: "uint256",
          },
        ],
        internalType: "struct Profiles.Fee[]",
        name: "fees",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getProfile",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "displayName",
            type: "string",
          },
          {
            internalType: "string",
            name: "email",
            type: "string",
          },
          {
            internalType: "string",
            name: "photoURL",
            type: "string",
          },
          {
            components: [
              {
                internalType: "string",
                name: "doc",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "cost",
                type: "uint256",
              },
            ],
            internalType: "struct Profiles.Fee[]",
            name: "fees",
            type: "tuple[]",
          },
        ],
        internalType: "struct Profiles.Profile",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kill",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "profiles",
    outputs: [
      {
        internalType: "string",
        name: "displayName",
        type: "string",
      },
      {
        internalType: "string",
        name: "email",
        type: "string",
      },
      {
        internalType: "string",
        name: "photoURL",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "doc",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "cost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "updateFee",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620024e5380380620024e58339818101604052810190620000379190620000d6565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000150565b600081519050620000d08162000136565b92915050565b600060208284031215620000e957600080fd5b6000620000f984828501620000bf565b91505092915050565b60006200010f8262000116565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001418162000102565b81146200014d57600080fd5b50565b61238580620001606000396000f3fe6080604052600436106100915760003560e01c806395ef86f61161005957806395ef86f614610168578063bbe1562714610198578063c3e24247146101d7578063db8d55f114610207578063fcee45f41461023257610091565b806301eb3a26146100965780630c717b9e146100c65780630f53a470146100f657806341c0e1b51461013357806355cd79471461013d575b600080fd5b6100b060048036038101906100ab9190611b0a565b61026f565b6040516100bd9190611f41565b60405180910390f35b6100e060048036038101906100db9190611ac9565b61041e565b6040516100ed9190611f41565b60405180910390f35b34801561010257600080fd5b5061011d60048036038101906101189190611aa0565b6107c5565b60405161012a919061200a565b60405180910390f35b61013b610acf565b005b34801561014957600080fd5b50610152610b96565b60405161015f9190611f04565b60405180910390f35b610182600480360381019061017d9190611c06565b610bbc565b60405161018f9190611f41565b60405180910390f35b3480156101a457600080fd5b506101bf60048036038101906101ba9190611aa0565b610efe565b6040516101ce93929190611f5c565b60405180910390f35b6101f160048036038101906101ec9190611b5e565b6110c0565b6040516101fe9190611f41565b60405180910390f35b34801561021357600080fd5b5061021c61128e565b6040516102299190611f1f565b60405180910390f35b34801561023e57600080fd5b5061025960048036038101906102549190611c06565b6114c3565b6040516102669190611fe8565b60405180910390f35b600060011515600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fbcbc0f1336040518263ffffffff1660e01b81526004016102d09190611f04565b60006040518083038186803b1580156102e857600080fd5b505afa1580156102fc573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906103259190611bc5565b6060015115151461036b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036290611fc8565b60405180910390fd5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301604051806040016040528085815260200184815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000190805190602001906104079291906116fb565b506020820151816001015550506001905092915050565b600060011515600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fbcbc0f1336040518263ffffffff1660e01b815260040161047f9190611f04565b60006040518083038186803b15801561049757600080fd5b505afa1580156104ab573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906104d49190611bc5565b6060015115151461051a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051190611fc8565b60405180910390fd5b7fc9da0ae38bd4761b72da1045c9b2618f0cd991dcac01e1f9bbf68474025f0743336040516105499190611f04565b60405180910390a1600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fbcbc0f1336040518263ffffffff1660e01b81526004016105ac9190611f04565b60006040518083038186803b1580156105c457600080fd5b505afa1580156105d8573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906106019190611bc5565b60000151600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001908051906020019061065a9291906116fb565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fbcbc0f1336040518263ffffffff1660e01b81526004016106b69190611f04565b60006040518083038186803b1580156106ce57600080fd5b505afa1580156106e2573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061070b9190611bc5565b60400151600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010190805190602001906107649291906116fb565b5081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020190805190602001906107bb9291906116fb565b5060019050919050565b6107cd611781565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806080016040529081600082018054610827906121b7565b80601f0160208091040260200160405190810160405280929190818152602001828054610853906121b7565b80156108a05780601f10610875576101008083540402835291602001916108a0565b820191906000526020600020905b81548152906001019060200180831161088357829003601f168201915b505050505081526020016001820180546108b9906121b7565b80601f01602080910402602001604051908101604052809291908181526020018280546108e5906121b7565b80156109325780601f1061090757610100808354040283529160200191610932565b820191906000526020600020905b81548152906001019060200180831161091557829003601f168201915b5050505050815260200160028201805461094b906121b7565b80601f0160208091040260200160405190810160405280929190818152602001828054610977906121b7565b80156109c45780601f10610999576101008083540402835291602001916109c4565b820191906000526020600020905b8154815290600101906020018083116109a757829003601f168201915b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610ac05783829060005260206000209060020201604051806040016040529081600082018054610a25906121b7565b80601f0160208091040260200160405190810160405280929190818152602001828054610a51906121b7565b8015610a9e5780601f10610a7357610100808354040283529160200191610a9e565b820191906000526020600020905b815481529060010190602001808311610a8157829003601f168201915b50505050508152602001600182015481525050815260200190600101906109f2565b50505050815250509050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5490611fa8565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060011515600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fbcbc0f1336040518263ffffffff1660e01b8152600401610c1d9190611f04565b60006040518083038186803b158015610c3557600080fd5b505afa158015610c49573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610c729190611bc5565b60600151151514610cb8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610caf90611fc8565b60405180910390fd5b60006001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030180549050610d0c91906120f9565b9050600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018181548110610d88577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060020201600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018481548110610e10577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600202016000820181600001908054610e32906121b7565b610e3d9291906117a9565b5060018201548160010155905050600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301805480610ec3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600190038181906000526020600020906002020160008082016000610ee89190611836565b6001820160009055505090556001915050919050565b6002602052806000526040600020600091509050806000018054610f21906121b7565b80601f0160208091040260200160405190810160405280929190818152602001828054610f4d906121b7565b8015610f9a5780601f10610f6f57610100808354040283529160200191610f9a565b820191906000526020600020905b815481529060010190602001808311610f7d57829003601f168201915b505050505090806001018054610faf906121b7565b80601f0160208091040260200160405190810160405280929190818152602001828054610fdb906121b7565b80156110285780601f10610ffd57610100808354040283529160200191611028565b820191906000526020600020905b81548152906001019060200180831161100b57829003601f168201915b50505050509080600201805461103d906121b7565b80601f0160208091040260200160405190810160405280929190818152602001828054611069906121b7565b80156110b65780601f1061108b576101008083540402835291602001916110b6565b820191906000526020600020905b81548152906001019060200180831161109957829003601f168201915b5050505050905083565b600060011515600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fbcbc0f1336040518263ffffffff1660e01b81526004016111219190611f04565b60006040518083038186803b15801561113957600080fd5b505afa15801561114d573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906111769190611bc5565b606001511515146111bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111b390611fc8565b60405180910390fd5b604051806040016040528085815260200184815250600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301838154811061124b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906002020160008201518160000190805190602001906112759291906116fb565b5060208201518160010155905050600190509392505050565b606060011515600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fbcbc0f1336040518263ffffffff1660e01b81526004016112ef9190611f04565b60006040518083038186803b15801561130757600080fd5b505afa15801561131b573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906113449190611bc5565b6060015115151461138a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161138190611fc8565b60405180910390fd5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301805480602002602001604051908101604052809291908181526020016000905b828210156114ba578382906000526020600020906002020160405180604001604052908160008201805461141f906121b7565b80601f016020809104026020016040519081016040528092919081815260200182805461144b906121b7565b80156114985780601f1061146d57610100808354040283529160200191611498565b820191906000526020600020905b81548152906001019060200180831161147b57829003601f168201915b50505050508152602001600182015481525050815260200190600101906113ec565b50505050905090565b6114cb611876565b60011515600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fbcbc0f1336040518263ffffffff1660e01b815260040161152a9190611f04565b60006040518083038186803b15801561154257600080fd5b505afa158015611556573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061157f9190611bc5565b606001511515146115c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115bc90611fc8565b60405180910390fd5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301828154811061163f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060020201604051806040016040529081600082018054611668906121b7565b80601f0160208091040260200160405190810160405280929190818152602001828054611694906121b7565b80156116e15780601f106116b6576101008083540402835291602001916116e1565b820191906000526020600020905b8154815290600101906020018083116116c457829003601f168201915b505050505081526020016001820154815250509050919050565b828054611707906121b7565b90600052602060002090601f0160209004810192826117295760008555611770565b82601f1061174257805160ff1916838001178555611770565b82800160010185558215611770579182015b8281111561176f578251825591602001919060010190611754565b5b50905061177d9190611890565b5090565b6040518060800160405280606081526020016060815260200160608152602001606081525090565b8280546117b5906121b7565b90600052602060002090601f0160209004810192826117d75760008555611825565b82601f106117e85780548555611825565b8280016001018555821561182557600052602060002091601f016020900482015b82811115611824578254825591600101919060010190611809565b5b5090506118329190611890565b5090565b508054611842906121b7565b6000825580601f106118545750611873565b601f0160209004906000526020600020908101906118729190611890565b5b50565b604051806040016040528060608152602001600081525090565b5b808211156118a9576000816000905550600101611891565b5090565b60006118c06118bb84612051565b61202c565b9050828152602081018484840111156118d857600080fd5b6118e3848285612175565b509392505050565b60006118fe6118f984612051565b61202c565b90508281526020810184848401111561191657600080fd5b611921848285612184565b509392505050565b6000813590506119388161230a565b92915050565b60008151905061194d81612321565b92915050565b600082601f83011261196457600080fd5b81356119748482602086016118ad565b91505092915050565b600082601f83011261198e57600080fd5b815161199e8482602086016118eb565b91505092915050565b600060c082840312156119b957600080fd5b6119c360c061202c565b9050600082015167ffffffffffffffff8111156119df57600080fd5b6119eb8482850161197d565b600083015250602082015167ffffffffffffffff811115611a0b57600080fd5b611a178482850161197d565b602083015250604082015167ffffffffffffffff811115611a3757600080fd5b611a438482850161197d565b6040830152506060611a578482850161193e565b6060830152506080611a6b8482850161193e565b60808301525060a0611a7f8482850161193e565b60a08301525092915050565b600081359050611a9a81612338565b92915050565b600060208284031215611ab257600080fd5b6000611ac084828501611929565b91505092915050565b600060208284031215611adb57600080fd5b600082013567ffffffffffffffff811115611af557600080fd5b611b0184828501611953565b91505092915050565b60008060408385031215611b1d57600080fd5b600083013567ffffffffffffffff811115611b3757600080fd5b611b4385828601611953565b9250506020611b5485828601611a8b565b9150509250929050565b600080600060608486031215611b7357600080fd5b600084013567ffffffffffffffff811115611b8d57600080fd5b611b9986828701611953565b9350506020611baa86828701611a8b565b9250506040611bbb86828701611a8b565b9150509250925092565b600060208284031215611bd757600080fd5b600082015167ffffffffffffffff811115611bf157600080fd5b611bfd848285016119a7565b91505092915050565b600060208284031215611c1857600080fd5b6000611c2684828501611a8b565b91505092915050565b6000611c3b8383611e03565b905092915050565b611c4c8161212d565b82525050565b6000611c5d82612092565b611c6781856120b5565b935083602082028501611c7985612082565b8060005b85811015611cb55784840389528151611c968582611c2f565b9450611ca1836120a8565b925060208a01995050600181019050611c7d565b50829750879550505050505092915050565b6000611cd282612092565b611cdc81856120c6565b935083602082028501611cee85612082565b8060005b85811015611d2a5784840389528151611d0b8582611c2f565b9450611d16836120a8565b925060208a01995050600181019050611cf2565b50829750879550505050505092915050565b611d458161213f565b82525050565b6000611d568261209d565b611d6081856120d7565b9350611d70818560208601612184565b611d79816122a7565b840191505092915050565b6000611d8f8261209d565b611d9981856120e8565b9350611da9818560208601612184565b611db2816122a7565b840191505092915050565b6000611dca600d836120e8565b9150611dd5826122b8565b602082019050919050565b6000611ded6009836120e8565b9150611df8826122e1565b602082019050919050565b60006040830160008301518482036000860152611e208282611d4b565b9150506020830151611e356020860182611ef5565b508091505092915050565b60006040830160008301518482036000860152611e5d8282611d4b565b9150506020830151611e726020860182611ef5565b508091505092915050565b60006080830160008301518482036000860152611e9a8282611d4b565b91505060208301518482036020860152611eb48282611d4b565b91505060408301518482036040860152611ece8282611d4b565b91505060608301518482036060860152611ee88282611c52565b9150508091505092915050565b611efe8161216b565b82525050565b6000602082019050611f196000830184611c43565b92915050565b60006020820190508181036000830152611f398184611cc7565b905092915050565b6000602082019050611f566000830184611d3c565b92915050565b60006060820190508181036000830152611f768186611d84565b90508181036020830152611f8a8185611d84565b90508181036040830152611f9e8184611d84565b9050949350505050565b60006020820190508181036000830152611fc181611dbd565b9050919050565b60006020820190508181036000830152611fe181611de0565b9050919050565b600060208201905081810360008301526120028184611e40565b905092915050565b600060208201905081810360008301526120248184611e7d565b905092915050565b6000612036612047565b905061204282826121e9565b919050565b6000604051905090565b600067ffffffffffffffff82111561206c5761206b612278565b5b612075826122a7565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006121048261216b565b915061210f8361216b565b9250828210156121225761212161221a565b5b828203905092915050565b60006121388261214b565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156121a2578082015181840152602081019050612187565b838111156121b1576000848401525b50505050565b600060028204905060018216806121cf57607f821691505b602082108114156121e3576121e2612249565b5b50919050565b6121f2826122a7565b810181811067ffffffffffffffff8211171561221157612210612278565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f556e617574686f72697365642e00000000000000000000000000000000000000600082015250565b7f466f7262696464656e0000000000000000000000000000000000000000000000600082015250565b6123138161212d565b811461231e57600080fd5b50565b61232a8161213f565b811461233557600080fd5b50565b6123418161216b565b811461234c57600080fd5b5056fea264697066735822122051977069aeda54fb335a2c6dea1b8f23eff760d731cc48405369fe69786a35c064736f6c63430008040033";

type ProfilesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProfilesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Profiles__factory extends ContractFactory {
  constructor(...args: ProfilesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Profiles";
  }

  deploy(
    acctAddr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Profiles> {
    return super.deploy(acctAddr, overrides || {}) as Promise<Profiles>;
  }
  getDeployTransaction(
    acctAddr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(acctAddr, overrides || {});
  }
  attach(address: string): Profiles {
    return super.attach(address) as Profiles;
  }
  connect(signer: Signer): Profiles__factory {
    return super.connect(signer) as Profiles__factory;
  }
  static readonly contractName: "Profiles";
  public readonly contractName: "Profiles";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProfilesInterface {
    return new utils.Interface(_abi) as ProfilesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Profiles {
    return new Contract(address, _abi, signerOrProvider) as Profiles;
  }
}
