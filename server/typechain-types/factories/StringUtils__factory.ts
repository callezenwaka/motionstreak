/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { StringUtils, StringUtilsInterface } from "../StringUtils";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_a",
        type: "string",
      },
      {
        internalType: "string",
        name: "_b",
        type: "string",
      },
    ],
    name: "compare",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_a",
        type: "string",
      },
      {
        internalType: "string",
        name: "_b",
        type: "string",
      },
    ],
    name: "equal",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_haystack",
        type: "string",
      },
      {
        internalType: "string",
        name: "_needle",
        type: "string",
      },
    ],
    name: "indexOf",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x610975610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c80633a96fdd71461005057806346bdca9a146100805780638a0807b7146100b0575b600080fd5b61006a600480360381019061006591906106bb565b6100e0565b6040516100779190610760565b60405180910390f35b61009a600480360381019061009591906106bb565b610354565b6040516100a79190610745565b60405180910390f35b6100ca60048036038101906100c591906106bb565b61036a565b6040516100d79190610760565b60405180910390f35b600080839050600083905060008251905080825110156100ff57815190505b60005b818110156102fa57828181518110610143577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168482815181106101a9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161015610208577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff94505050505061034e565b828181518110610241577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168482815181106102a7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191611156102e757600194505050505061034e565b80806102f290610887565b915050610102565b50815183511015610330577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff935050505061034e565b815183511115610346576001935050505061034e565b600093505050505b92915050565b60008061036184846100e0565b14905092915050565b6000808390506000839050600182511080610386575060018151105b80610392575081518151115b156103c1577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9250505061064d565b6fffffffffffffffffffffffffffffffff82511115610404577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9250505061064d565b6000805b8351811015610625578260008151811061044b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168482815181106104b1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141561061257600191505b82518210801561050457508351828261050291906107d1565b105b80156105e45750828281518110610544577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191684838361057e91906107d1565b815181106105b5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b156105fc5781806105f490610887565b9250506104e9565b8251821415610611578094505050505061064d565b5b808061061d90610887565b915050610408565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff93505050505b92915050565b6000610666610661846107a0565b61077b565b90508281526020810184848401111561067e57600080fd5b610689848285610847565b509392505050565b600082601f8301126106a257600080fd5b81356106b2848260208601610653565b91505092915050565b600080604083850312156106ce57600080fd5b600083013567ffffffffffffffff8111156106e857600080fd5b6106f485828601610691565b925050602083013567ffffffffffffffff81111561071157600080fd5b61071d85828601610691565b9150509250929050565b61073081610827565b82525050565b61073f81610833565b82525050565b600060208201905061075a6000830184610727565b92915050565b60006020820190506107756000830184610736565b92915050565b6000610785610796565b90506107918282610856565b919050565b6000604051905090565b600067ffffffffffffffff8211156107bb576107ba6108ff565b5b6107c48261092e565b9050602081019050919050565b60006107dc8261083d565b91506107e78361083d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561081c5761081b6108d0565b5b828201905092915050565b60008115159050919050565b6000819050919050565b6000819050919050565b82818337600083830152505050565b61085f8261092e565b810181811067ffffffffffffffff8211171561087e5761087d6108ff565b5b80604052505050565b60006108928261083d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156108c5576108c46108d0565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f830116905091905056fea264697066735822122038fc4627ccd9a5e1d7d2198cb51e2b850d0f354119c6e729c87db53870a8f61264736f6c63430008040033";

type StringUtilsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StringUtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StringUtils__factory extends ContractFactory {
  constructor(...args: StringUtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "StringUtils";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StringUtils> {
    return super.deploy(overrides || {}) as Promise<StringUtils>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): StringUtils {
    return super.attach(address) as StringUtils;
  }
  connect(signer: Signer): StringUtils__factory {
    return super.connect(signer) as StringUtils__factory;
  }
  static readonly contractName: "StringUtils";
  public readonly contractName: "StringUtils";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StringUtilsInterface {
    return new utils.Interface(_abi) as StringUtilsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StringUtils {
    return new Contract(address, _abi, signerOrProvider) as StringUtils;
  }
}
