/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Accounts, AccountsInterface } from "../Accounts";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "AccountAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "AccountDeleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "AccountUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "accounts",
    outputs: [
      {
        internalType: "string",
        name: "displayName",
        type: "string",
      },
      {
        internalType: "string",
        name: "phoneNumber",
        type: "string",
      },
      {
        internalType: "string",
        name: "email",
        type: "string",
      },
      {
        internalType: "string",
        name: "photoURL",
        type: "string",
      },
      {
        internalType: "address",
        name: "affiliate",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isTenant",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isActivated",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "string",
        name: "displayName",
        type: "string",
      },
      {
        internalType: "string",
        name: "email",
        type: "string",
      },
      {
        internalType: "string",
        name: "phoneNumber",
        type: "string",
      },
      {
        internalType: "string",
        name: "photoURL",
        type: "string",
      },
      {
        internalType: "bool",
        name: "_isTenant",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isActivated",
        type: "bool",
      },
    ],
    name: "addAccount",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getAccount",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "displayName",
            type: "string",
          },
          {
            internalType: "string",
            name: "phoneNumber",
            type: "string",
          },
          {
            internalType: "string",
            name: "email",
            type: "string",
          },
          {
            internalType: "string",
            name: "photoURL",
            type: "string",
          },
          {
            internalType: "address",
            name: "affiliate",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isTenant",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isActivated",
            type: "bool",
          },
        ],
        internalType: "struct Accounts.Account",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kill",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "string",
        name: "displayName",
        type: "string",
      },
      {
        internalType: "string",
        name: "email",
        type: "string",
      },
      {
        internalType: "string",
        name: "phoneNumber",
        type: "string",
      },
      {
        internalType: "string",
        name: "photoURL",
        type: "string",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    name: "updateAccount",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611887806100606000396000f3fe60806040526004361061004a5760003560e01c806341c0e1b51461004f5780635e5c06e214610059578063b1d6892b1461009d578063e8dac4b2146100cd578063fbcbc0f1146100fd575b600080fd5b61005761013a565b005b34801561006557600080fd5b50610080600480360381019061007b9190611101565b610201565b604051610094989796959493929190611500565b60405180910390f35b6100b760048036038101906100b29190611213565b6104b0565b6040516100c491906114e5565b60405180910390f35b6100e760048036038101906100e2919061112a565b6107e3565b6040516100f491906114e5565b60405180910390f35b34801561010957600080fd5b50610124600480360381019061011f9190611101565b610b42565b60405161013191906115da565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101bf9061159a565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b6001602052806000526040600020600091509050806000018054610224906116ff565b80601f0160208091040260200160405190810160405280929190818152602001828054610250906116ff565b801561029d5780601f106102725761010080835404028352916020019161029d565b820191906000526020600020905b81548152906001019060200180831161028057829003601f168201915b5050505050908060010180546102b2906116ff565b80601f01602080910402602001604051908101604052809291908181526020018280546102de906116ff565b801561032b5780601f106103005761010080835404028352916020019161032b565b820191906000526020600020905b81548152906001019060200180831161030e57829003601f168201915b505050505090806002018054610340906116ff565b80601f016020809104026020016040519081016040528092919081815260200182805461036c906116ff565b80156103b95780601f1061038e576101008083540402835291602001916103b9565b820191906000526020600020905b81548152906001019060200180831161039c57829003601f168201915b5050505050908060030180546103ce906116ff565b80601f01602080910402602001604051908101604052809291908181526020018280546103fa906116ff565b80156104475780601f1061041c57610100808354040283529160200191610447565b820191906000526020600020905b81548152906001019060200180831161042a57829003601f168201915b5050505050908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040160149054906101000a900460ff16908060040160159054906101000a900460ff16908060040160169054906101000a900460ff16905088565b60007f8f42195a0bbfa58954be4349deb9efc38bdb9c298e529f705f8bc1e38bce0399886040516104e191906114ca565b60405180910390a186600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001908051906020019061053f929190610f6b565b5085600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002019080519060200190610596929190610f6b565b5084600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010190805190602001906105ed929190610f6b565b5083600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003019080519060200190610644929190610f6b565b5082600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160146101000a81548160ff02191690831515021790555081600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160166101000a81548160ff02191690831515021790555060018060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160156101000a81548160ff02191690831515021790555033600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050979650505050505050565b600033600073ffffffffffffffffffffffffffffffffffffffff16600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156108b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108af906115ba565b60405180910390fd5b7fe7b1fae3a790ceab07642c09617df79428b02832cd512bbfdd4db50272dcdf30886040516108e791906114ca565b60405180910390a186600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000019080519060200190610945929190610f6b565b5085600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201908051906020019061099c929190610f6b565b5084600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010190805190602001906109f3929190610f6b565b5083600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003019080519060200190610a4a929190610f6b565b50600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160149054906101000a900460ff168015610ad357503373ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614155b15610b335782600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160156101000a81548160ff0219169083151502179055505b60019150509695505050505050565b610b4a610ff1565b81600073ffffffffffffffffffffffffffffffffffffffff16600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610c1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c14906115ba565b60405180910390fd5b610c25610ff1565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180610100016040529081600082018054610c80906116ff565b80601f0160208091040260200160405190810160405280929190818152602001828054610cac906116ff565b8015610cf95780601f10610cce57610100808354040283529160200191610cf9565b820191906000526020600020905b815481529060010190602001808311610cdc57829003601f168201915b50505050508152602001600182018054610d12906116ff565b80601f0160208091040260200160405190810160405280929190818152602001828054610d3e906116ff565b8015610d8b5780601f10610d6057610100808354040283529160200191610d8b565b820191906000526020600020905b815481529060010190602001808311610d6e57829003601f168201915b50505050508152602001600282018054610da4906116ff565b80601f0160208091040260200160405190810160405280929190818152602001828054610dd0906116ff565b8015610e1d5780601f10610df257610100808354040283529160200191610e1d565b820191906000526020600020905b815481529060010190602001808311610e0057829003601f168201915b50505050508152602001600382018054610e36906116ff565b80601f0160208091040260200160405190810160405280929190818152602001828054610e62906116ff565b8015610eaf5780601f10610e8457610100808354040283529160200191610eaf565b820191906000526020600020905b815481529060010190602001808311610e9257829003601f168201915b505050505081526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160149054906101000a900460ff161515151581526020016004820160159054906101000a900460ff161515151581526020016004820160169054906101000a900460ff16151515158152505090508092505050919050565b828054610f77906116ff565b90600052602060002090601f016020900481019282610f995760008555610fe0565b82601f10610fb257805160ff1916838001178555610fe0565b82800160010185558215610fe0579182015b82811115610fdf578251825591602001919060010190610fc4565b5b509050610fed9190611052565b5090565b60405180610100016040528060608152602001606081526020016060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000151581526020016000151581526020016000151581525090565b5b8082111561106b576000816000905550600101611053565b5090565b600061108261107d84611621565b6115fc565b90508281526020810184848401111561109a57600080fd5b6110a58482856116bd565b509392505050565b6000813590506110bc81611823565b92915050565b6000813590506110d18161183a565b92915050565b600082601f8301126110e857600080fd5b81356110f884826020860161106f565b91505092915050565b60006020828403121561111357600080fd5b6000611121848285016110ad565b91505092915050565b60008060008060008060c0878903121561114357600080fd5b600061115189828a016110ad565b965050602087013567ffffffffffffffff81111561116e57600080fd5b61117a89828a016110d7565b955050604087013567ffffffffffffffff81111561119757600080fd5b6111a389828a016110d7565b945050606087013567ffffffffffffffff8111156111c057600080fd5b6111cc89828a016110d7565b935050608087013567ffffffffffffffff8111156111e957600080fd5b6111f589828a016110d7565b92505060a061120689828a016110c2565b9150509295509295509295565b600080600080600080600060e0888a03121561122e57600080fd5b600061123c8a828b016110ad565b975050602088013567ffffffffffffffff81111561125957600080fd5b6112658a828b016110d7565b965050604088013567ffffffffffffffff81111561128257600080fd5b61128e8a828b016110d7565b955050606088013567ffffffffffffffff8111156112ab57600080fd5b6112b78a828b016110d7565b945050608088013567ffffffffffffffff8111156112d457600080fd5b6112e08a828b016110d7565b93505060a06112f18a828b016110c2565b92505060c06113028a828b016110c2565b91505092959891949750929550565b61131a8161167f565b82525050565b6113298161167f565b82525050565b61133881611691565b82525050565b61134781611691565b82525050565b600061135882611652565b611362818561165d565b93506113728185602086016116cc565b61137b816117c0565b840191505092915050565b600061139182611652565b61139b818561166e565b93506113ab8185602086016116cc565b6113b4816117c0565b840191505092915050565b60006113cc600d8361166e565b91506113d7826117d1565b602082019050919050565b60006113ef60138361166e565b91506113fa826117fa565b602082019050919050565b6000610100830160008301518482036000860152611423828261134d565b9150506020830151848203602086015261143d828261134d565b91505060408301518482036040860152611457828261134d565b91505060608301518482036060860152611471828261134d565b91505060808301516114866080860182611311565b5060a083015161149960a086018261132f565b5060c08301516114ac60c086018261132f565b5060e08301516114bf60e086018261132f565b508091505092915050565b60006020820190506114df6000830184611320565b92915050565b60006020820190506114fa600083018461133e565b92915050565b600061010082019050818103600083015261151b818b611386565b9050818103602083015261152f818a611386565b905081810360408301526115438189611386565b905081810360608301526115578188611386565b90506115666080830187611320565b61157360a083018661133e565b61158060c083018561133e565b61158d60e083018461133e565b9998505050505050505050565b600060208201905081810360008301526115b3816113bf565b9050919050565b600060208201905081810360008301526115d3816113e2565b9050919050565b600060208201905081810360008301526115f48184611405565b905092915050565b6000611606611617565b90506116128282611731565b919050565b6000604051905090565b600067ffffffffffffffff82111561163c5761163b611791565b5b611645826117c0565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061168a8261169d565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b838110156116ea5780820151818401526020810190506116cf565b838111156116f9576000848401525b50505050565b6000600282049050600182168061171757607f821691505b6020821081141561172b5761172a611762565b5b50919050565b61173a826117c0565b810181811067ffffffffffffffff8211171561175957611758611791565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f556e617574686f72697365642e00000000000000000000000000000000000000600082015250565b7f556e617574686f72697365642041636365737300000000000000000000000000600082015250565b61182c8161167f565b811461183757600080fd5b50565b61184381611691565b811461184e57600080fd5b5056fea2646970667358221220ef655556f7b6d69d96b3a3cc7d9509e3d29373f16009b6c09986cf2ad91c635b64736f6c63430008040033";

type AccountsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AccountsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Accounts__factory extends ContractFactory {
  constructor(...args: AccountsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Accounts";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Accounts> {
    return super.deploy(overrides || {}) as Promise<Accounts>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Accounts {
    return super.attach(address) as Accounts;
  }
  connect(signer: Signer): Accounts__factory {
    return super.connect(signer) as Accounts__factory;
  }
  static readonly contractName: "Accounts";
  public readonly contractName: "Accounts";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccountsInterface {
    return new utils.Interface(_abi) as AccountsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Accounts {
    return new Contract(address, _abi, signerOrProvider) as Accounts;
  }
}
