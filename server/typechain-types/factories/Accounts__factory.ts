/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Accounts, AccountsInterface } from "../Accounts";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "AccountAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "AccountUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "accounts",
    outputs: [
      {
        internalType: "string",
        name: "displayName",
        type: "string",
      },
      {
        internalType: "string",
        name: "phoneNumber",
        type: "string",
      },
      {
        internalType: "string",
        name: "email",
        type: "string",
      },
      {
        internalType: "bool",
        name: "isTenant",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isActivated",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "displayName",
        type: "string",
      },
      {
        internalType: "string",
        name: "email",
        type: "string",
      },
      {
        internalType: "string",
        name: "phoneNumber",
        type: "string",
      },
      {
        internalType: "bool",
        name: "_isTenant",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isActivated",
        type: "bool",
      },
    ],
    name: "addAccount",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "string",
        name: "displayName",
        type: "string",
      },
      {
        internalType: "string",
        name: "email",
        type: "string",
      },
      {
        internalType: "string",
        name: "phoneNumber",
        type: "string",
      },
      {
        internalType: "bool",
        name: "_isTenant",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isActivated",
        type: "bool",
      },
    ],
    name: "addAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "admins",
    outputs: [
      {
        internalType: "address",
        name: "affiliate",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getAccount",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "displayName",
            type: "string",
          },
          {
            internalType: "string",
            name: "phoneNumber",
            type: "string",
          },
          {
            internalType: "string",
            name: "email",
            type: "string",
          },
          {
            internalType: "bool",
            name: "isTenant",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isActivated",
            type: "bool",
          },
        ],
        internalType: "struct Accounts.Account",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getAffiliate",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNoAccount",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "kill",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "displayName",
        type: "string",
      },
      {
        internalType: "string",
        name: "email",
        type: "string",
      },
      {
        internalType: "string",
        name: "phoneNumber",
        type: "string",
      },
    ],
    name: "updateAccount",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "string",
        name: "displayName",
        type: "string",
      },
      {
        internalType: "string",
        name: "email",
        type: "string",
      },
      {
        internalType: "string",
        name: "phoneNumber",
        type: "string",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    name: "updateAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611de0806100606000396000f3fe60806040526004361061009c5760003560e01c80635187c6b7116100645780635187c6b7146101735780635e5c06e2146101a357806364efb22b146101e55780636abc209b14610222578063bc019eed14610252578063fbcbc0f11461028f5761009c565b806304d31572146100a15780633cc61c71146100d157806341c0e1b5146100fc578063429b62e51461010657806343449ae114610143575b600080fd5b6100bb60048036038101906100b6919061169d565b6102cc565b6040516100c891906119d0565b60405180910390f35b3480156100dd57600080fd5b506100e6610415565b6040516100f391906119b5565b60405180910390f35b61010461041a565b005b34801561011257600080fd5b5061012d600480360381019061012891906114e4565b6104e1565b60405161013a91906119b5565b60405180910390f35b61015d6004803603810190610158919061150d565b61051f565b60405161016a91906119d0565b60405180910390f35b61018d60048036038101906101889190611734565b610796565b60405161019a91906119d0565b60405180910390f35b3480156101af57600080fd5b506101ca60048036038101906101c591906114e4565b6109ef565b6040516101dc969594939291906119eb565b60405180910390f35b3480156101f157600080fd5b5061020c600480360381019061020791906114e4565b610bea565b60405161021991906119b5565b60405180910390f35b61023c600480360381019061023791906115cc565b610c56565b60405161024991906119d0565b60405180910390f35b34801561025e57600080fd5b50610279600480360381019061027491906114e4565b610fc7565b60405161028691906119b5565b60405180910390f35b34801561029b57600080fd5b506102b660048036038101906102b191906114e4565b611107565b6040516102c39190611ae1565b60405180910390f35b60007fe7b1fae3a790ceab07642c09617df79428b02832cd512bbfdd4db50272dcdf30336040516102fd91906119b5565b60405180910390a183600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001908051906020019061035b929190611373565b5082600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020190805190602001906103b2929190611373565b5081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001019080519060200190610409929190611373565b50600190509392505050565b600090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049f90611a61565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b60026020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081565b6000853373ffffffffffffffffffffffffffffffffffffffff16600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146105f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e990611ac1565b60405180910390fd5b7fe7b1fae3a790ceab07642c09617df79428b02832cd512bbfdd4db50272dcdf308760405161062191906119b5565b60405180910390a185600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001908051906020019061067f929190611373565b5084600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020190805190602001906106d6929190611373565b5083600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101908051906020019061072d929190611373565b5082600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160016101000a81548160ff021916908315150217905550600191505095945050505050565b60007f8f42195a0bbfa58954be4349deb9efc38bdb9c298e529f705f8bc1e38bce0399336040516107c791906119b5565b60405180910390a185600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000019080519060200190610825929190611373565b5084600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201908051906020019061087c929190611373565b5083600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010190805190602001906108d3929190611373565b5082600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160006101000a81548160ff02191690831515021790555081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160026101000a81548160ff02191690831515021790555060018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160016101000a81548160ff0219169083151502179055506001905095945050505050565b6001602052806000526040600020600091509050806000018054610a1290611c06565b80601f0160208091040260200160405190810160405280929190818152602001828054610a3e90611c06565b8015610a8b5780601f10610a6057610100808354040283529160200191610a8b565b820191906000526020600020905b815481529060010190602001808311610a6e57829003601f168201915b505050505090806001018054610aa090611c06565b80601f0160208091040260200160405190810160405280929190818152602001828054610acc90611c06565b8015610b195780601f10610aee57610100808354040283529160200191610b19565b820191906000526020600020905b815481529060010190602001808311610afc57829003601f168201915b505050505090806002018054610b2e90611c06565b80601f0160208091040260200160405190810160405280929190818152602001828054610b5a90611c06565b8015610ba75780601f10610b7c57610100808354040283529160200191610ba7565b820191906000526020600020905b815481529060010190602001808311610b8a57829003601f168201915b5050505050908060030160009054906101000a900460ff16908060030160019054906101000a900460ff16908060030160029054906101000a900460ff16905086565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600060011515600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff16151514610cee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce590611aa1565b60405180910390fd5b7f8f42195a0bbfa58954be4349deb9efc38bdb9c298e529f705f8bc1e38bce039987604051610d1d91906119b5565b60405180910390a185600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000019080519060200190610d7b929190611373565b5084600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002019080519060200190610dd2929190611373565b5083600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001019080519060200190610e29929190611373565b5082600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160006101000a81548160ff02191690831515021790555081600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160026101000a81548160ff02191690831515021790555060018060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160016101000a81548160ff02191690831515021790555033600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190509695505050505050565b600081600073ffffffffffffffffffffffffffffffffffffffff16600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561109c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109390611a81565b60405180910390fd5b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b61110f6113f9565b6111176113f9565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060c001604052908160008201805461117190611c06565b80601f016020809104026020016040519081016040528092919081815260200182805461119d90611c06565b80156111ea5780601f106111bf576101008083540402835291602001916111ea565b820191906000526020600020905b8154815290600101906020018083116111cd57829003601f168201915b5050505050815260200160018201805461120390611c06565b80601f016020809104026020016040519081016040528092919081815260200182805461122f90611c06565b801561127c5780601f106112515761010080835404028352916020019161127c565b820191906000526020600020905b81548152906001019060200180831161125f57829003601f168201915b5050505050815260200160028201805461129590611c06565b80601f01602080910402602001604051908101604052809291908181526020018280546112c190611c06565b801561130e5780601f106112e35761010080835404028352916020019161130e565b820191906000526020600020905b8154815290600101906020018083116112f157829003601f168201915b505050505081526020016003820160009054906101000a900460ff161515151581526020016003820160019054906101000a900460ff161515151581526020016003820160029054906101000a900460ff161515151581525050905080915050919050565b82805461137f90611c06565b90600052602060002090601f0160209004810192826113a157600085556113e8565b82601f106113ba57805160ff19168380011785556113e8565b828001600101855582156113e8579182015b828111156113e75782518255916020019190600101906113cc565b5b5090506113f59190611435565b5090565b6040518060c001604052806060815260200160608152602001606081526020016000151581526020016000151581526020016000151581525090565b5b8082111561144e576000816000905550600101611436565b5090565b600061146561146084611b28565b611b03565b90508281526020810184848401111561147d57600080fd5b611488848285611bc4565b509392505050565b60008135905061149f81611d7c565b92915050565b6000813590506114b481611d93565b92915050565b600082601f8301126114cb57600080fd5b81356114db848260208601611452565b91505092915050565b6000602082840312156114f657600080fd5b600061150484828501611490565b91505092915050565b600080600080600060a0868803121561152557600080fd5b600061153388828901611490565b955050602086013567ffffffffffffffff81111561155057600080fd5b61155c888289016114ba565b945050604086013567ffffffffffffffff81111561157957600080fd5b611585888289016114ba565b935050606086013567ffffffffffffffff8111156115a257600080fd5b6115ae888289016114ba565b92505060806115bf888289016114a5565b9150509295509295909350565b60008060008060008060c087890312156115e557600080fd5b60006115f389828a01611490565b965050602087013567ffffffffffffffff81111561161057600080fd5b61161c89828a016114ba565b955050604087013567ffffffffffffffff81111561163957600080fd5b61164589828a016114ba565b945050606087013567ffffffffffffffff81111561166257600080fd5b61166e89828a016114ba565b935050608061167f89828a016114a5565b92505060a061169089828a016114a5565b9150509295509295509295565b6000806000606084860312156116b257600080fd5b600084013567ffffffffffffffff8111156116cc57600080fd5b6116d8868287016114ba565b935050602084013567ffffffffffffffff8111156116f557600080fd5b611701868287016114ba565b925050604084013567ffffffffffffffff81111561171e57600080fd5b61172a868287016114ba565b9150509250925092565b600080600080600060a0868803121561174c57600080fd5b600086013567ffffffffffffffff81111561176657600080fd5b611772888289016114ba565b955050602086013567ffffffffffffffff81111561178f57600080fd5b61179b888289016114ba565b945050604086013567ffffffffffffffff8111156117b857600080fd5b6117c4888289016114ba565b93505060606117d5888289016114a5565b92505060806117e6888289016114a5565b9150509295509295909350565b6117fc81611b86565b82525050565b61180b81611b98565b82525050565b61181a81611b98565b82525050565b600061182b82611b59565b6118358185611b64565b9350611845818560208601611bd3565b61184e81611cc7565b840191505092915050565b600061186482611b59565b61186e8185611b75565b935061187e818560208601611bd3565b61188781611cc7565b840191505092915050565b600061189f600d83611b75565b91506118aa82611cd8565b602082019050919050565b60006118c2601283611b75565b91506118cd82611d01565b602082019050919050565b60006118e5600983611b75565b91506118f082611d2a565b602082019050919050565b6000611908601583611b75565b915061191382611d53565b602082019050919050565b600060c083016000830151848203600086015261193b8282611820565b915050602083015184820360208601526119558282611820565b9150506040830151848203604086015261196f8282611820565b91505060608301516119846060860182611802565b5060808301516119976080860182611802565b5060a08301516119aa60a0860182611802565b508091505092915050565b60006020820190506119ca60008301846117f3565b92915050565b60006020820190506119e56000830184611811565b92915050565b600060c0820190508181036000830152611a058189611859565b90508181036020830152611a198188611859565b90508181036040830152611a2d8187611859565b9050611a3c6060830186611811565b611a496080830185611811565b611a5660a0830184611811565b979650505050505050565b60006020820190508181036000830152611a7a81611892565b9050919050565b60006020820190508181036000830152611a9a816118b5565b9050919050565b60006020820190508181036000830152611aba816118d8565b9050919050565b60006020820190508181036000830152611ada816118fb565b9050919050565b60006020820190508181036000830152611afb818461191e565b905092915050565b6000611b0d611b1e565b9050611b198282611c38565b919050565b6000604051905090565b600067ffffffffffffffff821115611b4357611b42611c98565b5b611b4c82611cc7565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611b9182611ba4565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b83811015611bf1578082015181840152602081019050611bd6565b83811115611c00576000848401525b50505050565b60006002820490506001821680611c1e57607f821691505b60208210811415611c3257611c31611c69565b5b50919050565b611c4182611cc7565b810181811067ffffffffffffffff82111715611c6057611c5f611c98565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f556e617574686f72697365642e00000000000000000000000000000000000000600082015250565b7f556e617574686f72697365642061646d696e0000000000000000000000000000600082015250565b7f466f7262696464656e0000000000000000000000000000000000000000000000600082015250565b7f556e617574686f72697365642076657269666965720000000000000000000000600082015250565b611d8581611b86565b8114611d9057600080fd5b50565b611d9c81611b98565b8114611da757600080fd5b5056fea26469706673582212201c9bb748aabd8ab3e3246c6e42843b0628dfd6ad472fc6fcad56dba61f13945164736f6c63430008040033";

type AccountsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AccountsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Accounts__factory extends ContractFactory {
  constructor(...args: AccountsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Accounts";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Accounts> {
    return super.deploy(overrides || {}) as Promise<Accounts>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Accounts {
    return super.attach(address) as Accounts;
  }
  connect(signer: Signer): Accounts__factory {
    return super.connect(signer) as Accounts__factory;
  }
  static readonly contractName: "Accounts";
  public readonly contractName: "Accounts";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccountsInterface {
    return new utils.Interface(_abi) as AccountsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Accounts {
    return new Contract(address, _abi, signerOrProvider) as Accounts;
  }
}
