/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Accounts, AccountsInterface } from "../Accounts";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "AccountAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "AccountDeleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "AccountUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "accounts",
    outputs: [
      {
        internalType: "string",
        name: "displayName",
        type: "string",
      },
      {
        internalType: "string",
        name: "phoneNumber",
        type: "string",
      },
      {
        internalType: "string",
        name: "email",
        type: "string",
      },
      {
        internalType: "string",
        name: "photoURL",
        type: "string",
      },
      {
        internalType: "string",
        name: "role",
        type: "string",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isActivated",
        type: "bool",
      },
      {
        internalType: "address",
        name: "affiliate",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "string",
        name: "displayName",
        type: "string",
      },
      {
        internalType: "string",
        name: "email",
        type: "string",
      },
      {
        internalType: "string",
        name: "phoneNumber",
        type: "string",
      },
      {
        internalType: "string",
        name: "photoURL",
        type: "string",
      },
      {
        internalType: "string",
        name: "role",
        type: "string",
      },
      {
        internalType: "bool",
        name: "isActivated",
        type: "bool",
      },
    ],
    name: "addAccount",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getAccount",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "displayName",
            type: "string",
          },
          {
            internalType: "string",
            name: "phoneNumber",
            type: "string",
          },
          {
            internalType: "string",
            name: "email",
            type: "string",
          },
          {
            internalType: "string",
            name: "photoURL",
            type: "string",
          },
          {
            internalType: "string",
            name: "role",
            type: "string",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isActivated",
            type: "bool",
          },
          {
            internalType: "address",
            name: "affiliate",
            type: "address",
          },
        ],
        internalType: "struct Accounts.Account",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kill",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "string",
        name: "displayName",
        type: "string",
      },
      {
        internalType: "string",
        name: "email",
        type: "string",
      },
      {
        internalType: "string",
        name: "phoneNumber",
        type: "string",
      },
      {
        internalType: "string",
        name: "photoURL",
        type: "string",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    name: "updateAccount",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611b77806100606000396000f3fe60806040526004361061004a5760003560e01c80631085c5531461004f57806341c0e1b51461007f5780635e5c06e214610089578063e8dac4b2146100cd578063fbcbc0f1146100fd575b600080fd5b6100696004803603810190610064919061138d565b61013a565b604051610076919061174a565b60405180910390f35b61008761046a565b005b34801561009557600080fd5b506100b060048036038101906100ab919061127b565b610531565b6040516100c4989796959493929190611765565b60405180910390f35b6100e760048036038101906100e291906112a4565b61085b565b6040516100f4919061174a565b60405180910390f35b34801561010957600080fd5b50610124600480360381019061011f919061127b565b610c32565b604051610131919061187b565b60405180910390f35b60007f8f42195a0bbfa58954be4349deb9efc38bdb9c298e529f705f8bc1e38bce03998860405161016b919061172f565b60405180910390a186600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000190805190602001906101c99291906110d2565b5085600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020190805190602001906102209291906110d2565b5084600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010190805190602001906102779291906110d2565b5083600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030190805190602001906102ce9291906110d2565b5082600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040190805190602001906103259291906110d2565b5081600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050160016101000a81548160ff02191690831515021790555060018060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050160006101000a81548160ff02191690831515021790555033600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050160026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050979650505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ef9061183b565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b6001602052806000526040600020600091509050806000018054610554906119c6565b80601f0160208091040260200160405190810160405280929190818152602001828054610580906119c6565b80156105cd5780601f106105a2576101008083540402835291602001916105cd565b820191906000526020600020905b8154815290600101906020018083116105b057829003601f168201915b5050505050908060010180546105e2906119c6565b80601f016020809104026020016040519081016040528092919081815260200182805461060e906119c6565b801561065b5780601f106106305761010080835404028352916020019161065b565b820191906000526020600020905b81548152906001019060200180831161063e57829003601f168201915b505050505090806002018054610670906119c6565b80601f016020809104026020016040519081016040528092919081815260200182805461069c906119c6565b80156106e95780601f106106be576101008083540402835291602001916106e9565b820191906000526020600020905b8154815290600101906020018083116106cc57829003601f168201915b5050505050908060030180546106fe906119c6565b80601f016020809104026020016040519081016040528092919081815260200182805461072a906119c6565b80156107775780601f1061074c57610100808354040283529160200191610777565b820191906000526020600020905b81548152906001019060200180831161075a57829003601f168201915b50505050509080600401805461078c906119c6565b80601f01602080910402602001604051908101604052809291908181526020018280546107b8906119c6565b80156108055780601f106107da57610100808354040283529160200191610805565b820191906000526020600020905b8154815290600101906020018083116107e857829003601f168201915b5050505050908060050160009054906101000a900460ff16908060050160019054906101000a900460ff16908060050160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905088565b600033600073ffffffffffffffffffffffffffffffffffffffff16600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610930576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109279061185b565b60405180910390fd5b7fe7b1fae3a790ceab07642c09617df79428b02832cd512bbfdd4db50272dcdf308860405161095f919061172f565b60405180910390a186600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000190805190602001906109bd9291906110d2565b5085600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002019080519060200190610a149291906110d2565b5084600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001019080519060200190610a6b9291906110d2565b5083600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003019080519060200190610ac29291906110d2565b5073__$1c41232b8c3f9382c4bdca1a05a1ab00e7$__63465c4105600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004016040518263ffffffff1660e01b8152600401610b3b9190611806565b60206040518083038186803b158015610b5357600080fd5b505af4158015610b67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8b91906114a3565b8015610bc357503373ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614155b15610c235782600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050160006101000a81548160ff0219169083151502179055505b60019150509695505050505050565b610c3a611158565b81600073ffffffffffffffffffffffffffffffffffffffff16600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610d0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d049061185b565b60405180910390fd5b610d15611158565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180610100016040529081600082018054610d70906119c6565b80601f0160208091040260200160405190810160405280929190818152602001828054610d9c906119c6565b8015610de95780601f10610dbe57610100808354040283529160200191610de9565b820191906000526020600020905b815481529060010190602001808311610dcc57829003601f168201915b50505050508152602001600182018054610e02906119c6565b80601f0160208091040260200160405190810160405280929190818152602001828054610e2e906119c6565b8015610e7b5780601f10610e5057610100808354040283529160200191610e7b565b820191906000526020600020905b815481529060010190602001808311610e5e57829003601f168201915b50505050508152602001600282018054610e94906119c6565b80601f0160208091040260200160405190810160405280929190818152602001828054610ec0906119c6565b8015610f0d5780601f10610ee257610100808354040283529160200191610f0d565b820191906000526020600020905b815481529060010190602001808311610ef057829003601f168201915b50505050508152602001600382018054610f26906119c6565b80601f0160208091040260200160405190810160405280929190818152602001828054610f52906119c6565b8015610f9f5780601f10610f7457610100808354040283529160200191610f9f565b820191906000526020600020905b815481529060010190602001808311610f8257829003601f168201915b50505050508152602001600482018054610fb8906119c6565b80601f0160208091040260200160405190810160405280929190818152602001828054610fe4906119c6565b80156110315780601f1061100657610100808354040283529160200191611031565b820191906000526020600020905b81548152906001019060200180831161101457829003601f168201915b505050505081526020016005820160009054906101000a900460ff161515151581526020016005820160019054906101000a900460ff161515151581526020016005820160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090508092505050919050565b8280546110de906119c6565b90600052602060002090601f0160209004810192826111005760008555611147565b82601f1061111957805160ff1916838001178555611147565b82800160010185558215611147579182015b8281111561114657825182559160200191906001019061112b565b5b50905061115491906111b7565b5090565b6040518061010001604052806060815260200160608152602001606081526020016060815260200160608152602001600015158152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b5b808211156111d05760008160009055506001016111b8565b5090565b60006111e76111e2846118c2565b61189d565b9050828152602081018484840111156111ff57600080fd5b61120a848285611984565b509392505050565b60008135905061122181611b13565b92915050565b60008135905061123681611b2a565b92915050565b60008151905061124b81611b2a565b92915050565b600082601f83011261126257600080fd5b81356112728482602086016111d4565b91505092915050565b60006020828403121561128d57600080fd5b600061129b84828501611212565b91505092915050565b60008060008060008060c087890312156112bd57600080fd5b60006112cb89828a01611212565b965050602087013567ffffffffffffffff8111156112e857600080fd5b6112f489828a01611251565b955050604087013567ffffffffffffffff81111561131157600080fd5b61131d89828a01611251565b945050606087013567ffffffffffffffff81111561133a57600080fd5b61134689828a01611251565b935050608087013567ffffffffffffffff81111561136357600080fd5b61136f89828a01611251565b92505060a061138089828a01611227565b9150509295509295509295565b600080600080600080600060e0888a0312156113a857600080fd5b60006113b68a828b01611212565b975050602088013567ffffffffffffffff8111156113d357600080fd5b6113df8a828b01611251565b965050604088013567ffffffffffffffff8111156113fc57600080fd5b6114088a828b01611251565b955050606088013567ffffffffffffffff81111561142557600080fd5b6114318a828b01611251565b945050608088013567ffffffffffffffff81111561144e57600080fd5b61145a8a828b01611251565b93505060a088013567ffffffffffffffff81111561147757600080fd5b6114838a828b01611251565b92505060c06114948a828b01611227565b91505092959891949750929550565b6000602082840312156114b557600080fd5b60006114c38482850161123c565b91505092915050565b6114d581611946565b82525050565b6114e481611946565b82525050565b6114f381611958565b82525050565b61150281611958565b82525050565b600061151382611908565b61151d8185611913565b935061152d818560208601611993565b61153681611a87565b840191505092915050565b600061154c82611908565b6115568185611924565b9350611566818560208601611993565b61156f81611a87565b840191505092915050565b60008154611587816119c6565b6115918186611935565b945060018216600081146115ac57600181146115be576115f1565b60ff19831686526020860193506115f1565b6115c7856118f3565b60005b838110156115e9578154818901526001820191506020810190506115ca565b808801955050505b50505092915050565b6000611607600d83611924565b915061161282611a98565b602082019050919050565b600061162a600683611935565b915061163582611ac1565b602082019050919050565b600061164d601383611924565b915061165882611aea565b602082019050919050565b60006101008301600083015184820360008601526116818282611508565b9150506020830151848203602086015261169b8282611508565b915050604083015184820360408601526116b58282611508565b915050606083015184820360608601526116cf8282611508565b915050608083015184820360808601526116e98282611508565b91505060a08301516116fe60a08601826114ea565b5060c083015161171160c08601826114ea565b5060e083015161172460e08601826114cc565b508091505092915050565b600060208201905061174460008301846114db565b92915050565b600060208201905061175f60008301846114f9565b92915050565b6000610100820190508181036000830152611780818b611541565b90508181036020830152611794818a611541565b905081810360408301526117a88189611541565b905081810360608301526117bc8188611541565b905081810360808301526117d08187611541565b90506117df60a08301866114f9565b6117ec60c08301856114f9565b6117f960e08301846114db565b9998505050505050505050565b60006040820190508181036000830152611820818461157a565b905081810360208301526118338161161d565b905092915050565b60006020820190508181036000830152611854816115fa565b9050919050565b6000602082019050818103600083015261187481611640565b9050919050565b600060208201905081810360008301526118958184611663565b905092915050565b60006118a76118b8565b90506118b382826119f8565b919050565b6000604051905090565b600067ffffffffffffffff8211156118dd576118dc611a58565b5b6118e682611a87565b9050602081019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061195182611964565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b838110156119b1578082015181840152602081019050611996565b838111156119c0576000848401525b50505050565b600060028204905060018216806119de57607f821691505b602082108114156119f2576119f1611a29565b5b50919050565b611a0182611a87565b810181811067ffffffffffffffff82111715611a2057611a1f611a58565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f556e617574686f72697365642e00000000000000000000000000000000000000600082015250565b7f54656e616e740000000000000000000000000000000000000000000000000000600082015250565b7f556e617574686f72697365642041636365737300000000000000000000000000600082015250565b611b1c81611946565b8114611b2757600080fd5b50565b611b3381611958565b8114611b3e57600080fd5b5056fea26469706673582212206000e489311a3a16ec2c38b02c73e49659ab43afa827c3ebc23c4f145dafcffe64736f6c63430008040033";

type AccountsConstructorParams =
  | [linkLibraryAddresses: AccountsLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AccountsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Accounts__factory extends ContractFactory {
  constructor(...args: AccountsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Accounts__factory.linkBytecode(linkLibraryAddresses), signer);
    }
    this.contractName = "Accounts";
  }

  static linkBytecode(linkLibraryAddresses: AccountsLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$1c41232b8c3f9382c4bdca1a05a1ab00e7\\$__", "g"),
      linkLibraryAddresses["contracts/Utils.sol:Utils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Accounts> {
    return super.deploy(overrides || {}) as Promise<Accounts>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Accounts {
    return super.attach(address) as Accounts;
  }
  connect(signer: Signer): Accounts__factory {
    return super.connect(signer) as Accounts__factory;
  }
  static readonly contractName: "Accounts";
  public readonly contractName: "Accounts";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccountsInterface {
    return new utils.Interface(_abi) as AccountsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Accounts {
    return new Contract(address, _abi, signerOrProvider) as Accounts;
  }
}

export interface AccountsLibraryAddresses {
  ["contracts/Utils.sol:Utils"]: string;
}
