/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { EmailRegex, EmailRegexInterface } from "../EmailRegex";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "input",
        type: "string",
      },
    ],
    name: "matches",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x610ddd610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c806332ac752b1461003a575b600080fd5b610054600480360381019061004f9190610bd8565b61006a565b6040516100619190610c28565b60405180910390f35b6000806001905060005b835181101561010f5760008482815181106100b8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b60f81c90506100e48160ff166100d885610126565b6020015163ffffffff16565b925060008314156100fb5760009350505050610121565b50808061010790610cef565b915050610074565b5061011981610126565b600001519150505b919050565b61012e610b24565b60018214156101585760405180604001604052806000151581526020016102d881525090506102d3565b60028214156101825760405180604001604052806000151581526020016103b381525090506102d3565b60038214156101ac5760405180604001604052806000151581526020016104ae81525090506102d3565b60048214156101d65760405180604001604052806000151581526020016105a981525090506102d3565b600582141561020057604051806040016040528060001515815260200161065281525090506102d3565b600682141561022a57604051806040016040528060001515815260200161071b81525090506102d3565b60078214156102545760405180604001604052806000151581526020016107eb81525090506102d3565b600882141561027e5760405180604001604052806000151581526020016108b481525090506102d3565b60098214156102a857604051806040016040528060011515815260200161098481525090506102d3565b600a8214156102d2576040518060400160405280600115158152602001610a5481525090506102d3565b5b919050565b6000602582101580156102ec575060258211155b806103055750602b82101580156103045750602b8211155b5b8061031e5750602d821015801561031d5750602d8211155b5b806103375750602e82101580156103365750602e8211155b5b8061035057506030821015801561034f575060398211155b5b806103695750604182101580156103685750605a8211155b5b806103825750605f82101580156103815750605f8211155b5b8061039b57506061821015801561039a5750607a8211155b5b156103a957600290506103ae565b600090505b919050565b6000602582101580156103c7575060258211155b806103e05750602b82101580156103df5750602b8211155b5b806103f95750602d82101580156103f85750602d8211155b5b806104125750602e82101580156104115750602e8211155b5b8061042b57506030821015801561042a575060398211155b5b806104445750604182101580156104435750605a8211155b5b8061045d5750605f821015801561045c5750605f8211155b5b806104765750606182101580156104755750607a8211155b5b1561048457600390506104a9565b60408210158015610496575060408211155b156104a457600490506104a9565b600090505b919050565b6000602582101580156104c2575060258211155b806104db5750602b82101580156104da5750602b8211155b5b806104f45750602d82101580156104f35750602d8211155b5b8061050d5750602e821015801561050c5750602e8211155b5b80610526575060308210158015610525575060398211155b5b8061053f57506041821015801561053e5750605a8211155b5b806105585750605f82101580156105575750605f8211155b5b806105715750606182101580156105705750607a8211155b5b1561057f57600390506105a4565b60408210158015610591575060408211155b1561059f57600490506105a4565b600090505b919050565b6000602e82101580156105bd5750602f8211155b806105d65750603082101580156105d5575060398211155b5b806105ef5750603a82101580156105ee575060408211155b5b806106085750604182101580156106075750605a8211155b5b806106215750605b82101580156106205750605f8211155b5b8061063a5750606182101580156106395750607a8211155b5b15610648576005905061064d565b600090505b919050565b6000602e82101580156106665750602e8211155b156106745760069050610716565b602f82101580156106865750602f8211155b8061069f57506030821015801561069e575060398211155b5b806106b85750603a82101580156106b7575060408211155b5b806106d15750604182101580156106d05750605a8211155b5b806106ea5750605b82101580156106e95750605f8211155b5b806107035750606182101580156107025750607a8211155b5b156107115760079050610716565b600090505b919050565b6000602e821015801561072f5750602e8211155b1561073d57600690506107e6565b602f821015801561074f5750602f8211155b80610768575060308210158015610767575060398211155b5b806107815750603a8210158015610780575060408211155b5b8061079a5750605b82101580156107995750605f8211155b5b156107a857600790506107e6565b604182101580156107ba5750605a8211155b806107d35750606182101580156107d25750607a8211155b5b156107e157600890506107e6565b600090505b919050565b6000602e82101580156107ff5750602e8211155b1561080d57600690506108af565b602f821015801561081f5750602f8211155b80610838575060308210158015610837575060398211155b5b806108515750603a8210158015610850575060408211155b5b8061086a5750604182101580156108695750605a8211155b5b806108835750605b82101580156108825750605f8211155b5b8061089c57506061821015801561089b5750607a8211155b5b156108aa57600790506108af565b600090505b919050565b6000602e82101580156108c85750602e8211155b156108d6576006905061097f565b602f82101580156108e85750602f8211155b80610901575060308210158015610900575060398211155b5b8061091a5750603a8210158015610919575060408211155b5b806109335750605b82101580156109325750605f8211155b5b15610941576007905061097f565b604182101580156109535750605a8211155b8061096c57506061821015801561096b5750607a8211155b5b1561097a576009905061097f565b600090505b919050565b6000602e82101580156109985750602e8211155b156109a65760069050610a4f565b602f82101580156109b85750602f8211155b806109d15750603082101580156109d0575060398211155b5b806109ea5750603a82101580156109e9575060408211155b5b80610a035750605b8210158015610a025750605f8211155b5b15610a115760079050610a4f565b60418210158015610a235750605a8211155b80610a3c575060618210158015610a3b5750607a8211155b5b15610a4a57600a9050610a4f565b600090505b919050565b6000602e8210158015610a685750602e8211155b15610a765760069050610b1f565b602f8210158015610a885750602f8211155b80610aa1575060308210158015610aa0575060398211155b5b80610aba5750603a8210158015610ab9575060408211155b5b80610ad35750605b8210158015610ad25750605f8211155b5b15610ae15760079050610b1f565b60418210158015610af35750605a8211155b80610b0c575060618210158015610b0b5750607a8211155b5b15610b1a57600a9050610b1f565b600090505b919050565b6040518060400160405280600015158152602001610b4181525090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052605160045260246000fd5b6000610b83610b7e84610c68565b610c43565b905082815260208101848484011115610b9b57600080fd5b610ba6848285610caf565b509392505050565b600082601f830112610bbf57600080fd5b8135610bcf848260208601610b70565b91505092915050565b600060208284031215610bea57600080fd5b600082013567ffffffffffffffff811115610c0457600080fd5b610c1084828501610bae565b91505092915050565b610c2281610c99565b82525050565b6000602082019050610c3d6000830184610c19565b92915050565b6000610c4d610c5e565b9050610c598282610cbe565b919050565b6000604051905090565b600067ffffffffffffffff821115610c8357610c82610d67565b5b610c8c82610d96565b9050602081019050919050565b60008115159050919050565b6000819050919050565b82818337600083830152505050565b610cc782610d96565b810181811067ffffffffffffffff82111715610ce657610ce5610d67565b5b80604052505050565b6000610cfa82610ca5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d2d57610d2c610d38565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f830116905091905056fea2646970667358221220ef66514b864956dd64f2d362534207e5e37be2380c693406048250898db63e3e64736f6c63430008040033";

type EmailRegexConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EmailRegexConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EmailRegex__factory extends ContractFactory {
  constructor(...args: EmailRegexConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "EmailRegex";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EmailRegex> {
    return super.deploy(overrides || {}) as Promise<EmailRegex>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): EmailRegex {
    return super.attach(address) as EmailRegex;
  }
  connect(signer: Signer): EmailRegex__factory {
    return super.connect(signer) as EmailRegex__factory;
  }
  static readonly contractName: "EmailRegex";
  public readonly contractName: "EmailRegex";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EmailRegexInterface {
    return new utils.Interface(_abi) as EmailRegexInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EmailRegex {
    return new Contract(address, _abi, signerOrProvider) as EmailRegex;
  }
}
